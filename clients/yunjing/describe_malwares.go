package yunjing

import (
	github_com_morlay_goqcloud "github.com/morlay/goqcloud"
)

// 获取木马信息
// https://cloud.tencent.com/document/api/296/19837

type DescribeMalwaresRequest struct {
	// 过滤条件。Keywords - String - 是否必填：否 - 查询关键字 Status - String - 是否必填：否 - 木马状态（UN_OPERATED: 未处理 | SEGREGATED: 已隔离|TRUSTED：信任）每个过滤条件只支持一个值，暂不支持多个值“或”关系查询。
	Filters []*Filter `name:"Filters,omitempty"`
	// 返回数量，默认为10，最大值为100。
	Limit *int64 `name:"Limit,omitempty"`
	// 偏移量，默认为0。
	Offset *int64 `name:"Offset,omitempty"`
	// 区域
	Region string `name:"Region"`
	// 客户端唯一Uuid。
	Uuid *string `name:"Uuid,omitempty"`
}

func (req *DescribeMalwaresRequest) Invoke(client github_com_morlay_goqcloud.Client) (*DescribeMalwaresResponse, error) {
	resp := &DescribeMalwaresResponse{}
	err := client.Request("yunjing", "DescribeMalwares", "2018-02-28").Do(req, resp)
	return resp, err
}

type DescribeMalwaresResponse struct {
	github_com_morlay_goqcloud.TencentCloudBaseResponse
	// Malware数组。
	Malwares []*Malware `json:"Malwares"`
	// 木马总数。
	TotalCount int64 `json:"TotalCount"`
}
